#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfServiceKruwa
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Ocena_Przedmioty")]
	public partial class DataClasses4DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertOceny(Oceny instance);
    partial void UpdateOceny(Oceny instance);
    partial void DeleteOceny(Oceny instance);
    partial void InsertPrzedmioty(Przedmioty instance);
    partial void UpdatePrzedmioty(Przedmioty instance);
    partial void DeletePrzedmioty(Przedmioty instance);
    #endregion
		
		public DataClasses4DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Ocena_PrzedmiotyConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses4DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses4DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses4DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses4DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Oceny> Ocenies
		{
			get
			{
				return this.GetTable<Oceny>();
			}
		}
		
		public System.Data.Linq.Table<Przedmioty> Przedmioties
		{
			get
			{
				return this.GetTable<Przedmioty>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Oceny")]
	public partial class Oceny : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Oceny;
		
		private int _ID_Przedmiotu;
		
		private int _ID_Studenta;
		
		private int _Wartosc;
		
		private EntityRef<Przedmioty> _Przedmioty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_OcenyChanging(int value);
    partial void OnID_OcenyChanged();
    partial void OnID_PrzedmiotuChanging(int value);
    partial void OnID_PrzedmiotuChanged();
    partial void OnID_StudentaChanging(int value);
    partial void OnID_StudentaChanged();
    partial void OnWartoscChanging(int value);
    partial void OnWartoscChanged();
    #endregion
		
		public Oceny()
		{
			this._Przedmioty = default(EntityRef<Przedmioty>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Oceny", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Oceny
		{
			get
			{
				return this._ID_Oceny;
			}
			set
			{
				if ((this._ID_Oceny != value))
				{
					this.OnID_OcenyChanging(value);
					this.SendPropertyChanging();
					this._ID_Oceny = value;
					this.SendPropertyChanged("ID_Oceny");
					this.OnID_OcenyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Przedmiotu", DbType="Int NOT NULL")]
		public int ID_Przedmiotu
		{
			get
			{
				return this._ID_Przedmiotu;
			}
			set
			{
				if ((this._ID_Przedmiotu != value))
				{
					if (this._Przedmioty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_PrzedmiotuChanging(value);
					this.SendPropertyChanging();
					this._ID_Przedmiotu = value;
					this.SendPropertyChanged("ID_Przedmiotu");
					this.OnID_PrzedmiotuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Studenta", DbType="Int NOT NULL")]
		public int ID_Studenta
		{
			get
			{
				return this._ID_Studenta;
			}
			set
			{
				if ((this._ID_Studenta != value))
				{
					this.OnID_StudentaChanging(value);
					this.SendPropertyChanging();
					this._ID_Studenta = value;
					this.SendPropertyChanged("ID_Studenta");
					this.OnID_StudentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wartosc", DbType="Int NOT NULL")]
		public int Wartosc
		{
			get
			{
				return this._Wartosc;
			}
			set
			{
				if ((this._Wartosc != value))
				{
					this.OnWartoscChanging(value);
					this.SendPropertyChanging();
					this._Wartosc = value;
					this.SendPropertyChanged("Wartosc");
					this.OnWartoscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Przedmioty_Oceny", Storage="_Przedmioty", ThisKey="ID_Przedmiotu", OtherKey="ID_Przedmiotu", IsForeignKey=true)]
		public Przedmioty Przedmioty
		{
			get
			{
				return this._Przedmioty.Entity;
			}
			set
			{
				Przedmioty previousValue = this._Przedmioty.Entity;
				if (((previousValue != value) 
							|| (this._Przedmioty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Przedmioty.Entity = null;
						previousValue.Ocenies.Remove(this);
					}
					this._Przedmioty.Entity = value;
					if ((value != null))
					{
						value.Ocenies.Add(this);
						this._ID_Przedmiotu = value.ID_Przedmiotu;
					}
					else
					{
						this._ID_Przedmiotu = default(int);
					}
					this.SendPropertyChanged("Przedmioty");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Przedmioty")]
	public partial class Przedmioty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Przedmiotu;
		
		private string _Nazwa_przedmiotu;
		
		private EntitySet<Oceny> _Ocenies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PrzedmiotuChanging(int value);
    partial void OnID_PrzedmiotuChanged();
    partial void OnNazwa_przedmiotuChanging(string value);
    partial void OnNazwa_przedmiotuChanged();
    #endregion
		
		public Przedmioty()
		{
			this._Ocenies = new EntitySet<Oceny>(new Action<Oceny>(this.attach_Ocenies), new Action<Oceny>(this.detach_Ocenies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Przedmiotu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_Przedmiotu
		{
			get
			{
				return this._ID_Przedmiotu;
			}
			set
			{
				if ((this._ID_Przedmiotu != value))
				{
					this.OnID_PrzedmiotuChanging(value);
					this.SendPropertyChanging();
					this._ID_Przedmiotu = value;
					this.SendPropertyChanged("ID_Przedmiotu");
					this.OnID_PrzedmiotuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa_przedmiotu", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nazwa_przedmiotu
		{
			get
			{
				return this._Nazwa_przedmiotu;
			}
			set
			{
				if ((this._Nazwa_przedmiotu != value))
				{
					this.OnNazwa_przedmiotuChanging(value);
					this.SendPropertyChanging();
					this._Nazwa_przedmiotu = value;
					this.SendPropertyChanged("Nazwa_przedmiotu");
					this.OnNazwa_przedmiotuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Przedmioty_Oceny", Storage="_Ocenies", ThisKey="ID_Przedmiotu", OtherKey="ID_Przedmiotu")]
		public EntitySet<Oceny> Ocenies
		{
			get
			{
				return this._Ocenies;
			}
			set
			{
				this._Ocenies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ocenies(Oceny entity)
		{
			this.SendPropertyChanging();
			entity.Przedmioty = this;
		}
		
		private void detach_Ocenies(Oceny entity)
		{
			this.SendPropertyChanging();
			entity.Przedmioty = null;
		}
	}
}
#pragma warning restore 1591
